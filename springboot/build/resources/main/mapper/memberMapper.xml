<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.wru.wrubookstore.mapper.MemberMapper">
    <!-- 전체 회원 수 조회 -->
    <select id="count" resultType="int">
        SELECT count(*)
        FROM user u, member m
        WHERE u.user_id = m.user_id AND u.is_member = 1
    </select>

    <!-- 전체 회원 목록 조회 -->
    <select id="selectAll" resultType="MemberDto">
        SELECT m.member_id, u.user_id, u.user_status_id, u.email, u.password, u.name, u.is_member, m.membership_id,
               m.nickname, m.phone_num, m.birthdate, m.reg_date, m.mod_date, m.gender, m.mileage, m.last_month_amount,
               m.image
        FROM user u, member m
        WHERE u.user_id = m.user_id AND u.is_member = 1
    </select>

    <!-- Member 테이블에서 회원 삭제 -->
    <delete id="deleteAllMembers">
        DELETE
        FROM member
        WHERE user_id IN (
            SELECT user_id
            FROM user
            WHERE is_member = 1
        );
    </delete>

    <!-- User 테이블에서 전체 회원 삭제 -->
    <delete id="deleteAllUsers">
        DELETE
        FROM user
        WHERE is_member = 1
    </delete>

    <!-- User 테이블에 회원 정보 추가 -->
    <insert id="insertUser" parameterType="UserDto">
        INSERT INTO user (email, password, name, is_member)
        VALUES (#{email}, #{password}, #{name}, 1);
    </insert>

    <!-- User 테이블에 회원 정보 추가 -->
    <insert id="insertUserWithId" parameterType="MemberDto">
        INSERT INTO user (user_id, email, password, name, is_member)
        VALUES (#{userId}, #{email}, #{password}, #{name}, 1);
    </insert>

    <!-- Member 테이블에 회원 상세 정보 추가 -->
    <insert id="insertMember" parameterType="MemberDto">
        INSERT INTO member (user_id, nickname, phone_num, birthdate, gender)
        VALUES (
                    (SELECT user_id
                     FROM user
                     WHERE email = #{email} AND is_member = 1),
                    #{nickname}, #{phoneNum}, #{birthdate}, #{gender}
        )
    </insert>

    <!-- 특정 회원 조회 -->
    <select id="select" parameterType="Integer" resultType="MemberDto">
        SELECT m.member_id, u.user_id, u.user_status_id, u.email, u.password, u.name, u.is_member, m.membership_id,
               m.nickname, m.phone_num, m.birthdate, m.reg_date, m.mod_date, m.gender, m.mileage, m.last_month_amount,
               m.image
        FROM user u, member m
        WHERE u.user_id = m.user_id AND u.user_id = #{userId} AND u.is_member = 1
    </select>

    <!-- userId로 특정 회원 조회 -->
    <select id="selectMember" parameterType="int" resultType="MemberDto">
        SELECT *
        FROM member
        WHERE user_id = #{userId}
    </select>

    <select id="selectByNameAndPhoneNum" parameterType="MemberDto" resultType="MemberDto">
        SELECT *
        FROM member m, user u
        WHERE m.user_id = u.user_id AND u.is_member = true
        AND u.name = #{name} AND m.phone_num = #{phoneNum}
    </select>
    
    <select id="selectByEmailAndNameAndPhoneNum" parameterType="MemberDto" resultType="MemberDto">
        SELECT *
        FROM member m, user u
        WHERE m.user_id = u.user_id AND u.is_member = true
        AND u.email = #{email} AND u.name = #{name} AND m.phone_num = #{phoneNum}
    </select>

    <!-- User 테이블에 있는 회원 정보 수정 -->
    <update id="updateUser" parameterType="MemberDto">
        UPDATE user
        SET password = #{password}, name = #{name}
        WHERE user_id = #{userId} AND is_member = 1
    </update>

    <!-- Member 테이블에 있는 회원 상세 정보 수정 -->
    <update id="updateMember" parameterType="MemberDto">
        UPDATE member
        SET nickname = #{nickname}, phone_num = #{phoneNum}, birthdate = #{birthdate}, mod_date = NOW(),
        gender = #{gender}
        WHERE user_id = #{userId}
    </update>

    <!-- 사용 마일리지 차감 및 구매로 인한 마일리지 추가 -->
    <update id="updateMileage" parameterType="Map">
        UPDATE member m
        JOIN membership ms ON m.membership_id = ms.membership_id
        SET m.mileage = m.mileage - #{mileageDiscount}, m.mileage = m.mileage + (#{actualPrice} * ms.mileage_percent)
        WHERE m.user_id = #{userId}
    </update>

    <!-- 전월 구매 금액 추가 -->
    <update id="updateLastMonthAmount" parameterType="Map">
        UPDATE member
        SET last_month_amount = #{totalPrice}
        WHERE user_id = #{userId}
    </update>

    <!-- Member 테이블에서 회원 상세 정보 삭제 -->
    <delete id="deleteMember" parameterType="Integer">
        DELETE
        FROM member
        WHERE user_id = (
            SELECT user_id
            FROM user
            WHERE user_id = #{userId} AND is_member = 1
        )
    </delete>

    <!-- User 테이블에서 회원 정보 삭제 -->
    <delete id="deleteUser" parameterType="Integer">
        DELETE
        FROM user
        WHERE user_id = #{userId}
    </delete>

    <!-- 테스트 용도 -->
    <!-- User 테이블에 있는 회원 수 조회 -->
    <select id="countMembers" resultType="int">
        SELECT count(*)
        FROM user
        WHERE is_member = 1
    </select>
</mapper>
